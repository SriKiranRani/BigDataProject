<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0909.1159                               -->
<workbook original-version='18.1' source-build='2023.2.2 (20232.23.0909.1159)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <CustomReferenceLineTooltips />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='geolocation' inline='true' name='federated.1k9umgo00s0xqq198jzx909byebh' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='geolocation' name='textscan.1kuwsaa0y3dhoe1g3lf4j0ua6kny'>
            <connection class='textscan' directory='C:/Users/ravip/Desktop/SEM2/bigD/project/Data files for visualization' filename='geolocation.csv' password='' server='' />
          </named-connection>
          <named-connection caption='Dropped_20231202T194519' name='Dropped_20231202T194519'>
            <connection class='textscan' directory='C:/Users/ravip/Documents/My Tableau Repository/Datasources' filename='Dropped_20231202T194519.txt' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='Dropped_20231202T194519' name='Dropped_20231202T194519.txt' table='[Dropped_20231202T194519#txt]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.1kuwsaa0y3dhoe1g3lf4j0ua6kny' name='geolocation.csv' table='[geolocation#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='truckid' ordinal='0' />
              <column datatype='string' name='driverid' ordinal='1' />
              <column datatype='string' name='event' ordinal='2' />
              <column datatype='real' name='latitude' ordinal='3' />
              <column datatype='real' name='longitude' ordinal='4' />
              <column datatype='string' name='city' ordinal='5' />
              <column datatype='string' name='state' ordinal='6' />
              <column datatype='integer' name='velocity' ordinal='7' />
              <column datatype='integer' name='event_ind' ordinal='8' />
              <column datatype='integer' name='idling_ind' ordinal='9' />
              <column datatype='string' name='Risk_factor' ordinal='10' />
            </columns>
          </relation>
          <relation connection='Dropped_20231202T194519' name='Dropped_20231202T194519.txt' table='[Dropped_20231202T194519#txt]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[geolocation.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>truckid</remote-name>
            <remote-type>129</remote-type>
            <local-name>[truckid]</local-name>
            <parent-name>[geolocation.csv]</parent-name>
            <remote-alias>truckid</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geolocation.csv_DF8EFBB536154BF892A6B110C984C97E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>driverid</remote-name>
            <remote-type>129</remote-type>
            <local-name>[driverid]</local-name>
            <parent-name>[geolocation.csv]</parent-name>
            <remote-alias>driverid</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geolocation.csv_DF8EFBB536154BF892A6B110C984C97E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>event</remote-name>
            <remote-type>129</remote-type>
            <local-name>[event]</local-name>
            <parent-name>[geolocation.csv]</parent-name>
            <remote-alias>event</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geolocation.csv_DF8EFBB536154BF892A6B110C984C97E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[geolocation.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geolocation.csv_DF8EFBB536154BF892A6B110C984C97E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[geolocation.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geolocation.csv_DF8EFBB536154BF892A6B110C984C97E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[geolocation.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geolocation.csv_DF8EFBB536154BF892A6B110C984C97E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[geolocation.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geolocation.csv_DF8EFBB536154BF892A6B110C984C97E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>velocity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[velocity]</local-name>
            <parent-name>[geolocation.csv]</parent-name>
            <remote-alias>velocity</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geolocation.csv_DF8EFBB536154BF892A6B110C984C97E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>event_ind</remote-name>
            <remote-type>20</remote-type>
            <local-name>[event_ind]</local-name>
            <parent-name>[geolocation.csv]</parent-name>
            <remote-alias>event_ind</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geolocation.csv_DF8EFBB536154BF892A6B110C984C97E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>idling_ind</remote-name>
            <remote-type>20</remote-type>
            <local-name>[idling_ind]</local-name>
            <parent-name>[geolocation.csv]</parent-name>
            <remote-alias>idling_ind</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geolocation.csv_DF8EFBB536154BF892A6B110C984C97E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Risk_factor</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Risk_factor]</local-name>
            <parent-name>[geolocation.csv]</parent-name>
            <remote-alias>Risk_factor</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geolocation.csv_DF8EFBB536154BF892A6B110C984C97E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Dropped_20231202T194519.txt' datatype='table' name='[__tableau_internal_object_id__].[Dropped_20231202T194519.txt_23B81CA1D2874C9EB025CFBABB813430]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='geolocation.csv' datatype='table' name='[__tableau_internal_object_id__].[geolocation.csv_DF8EFBB536154BF892A6B110C984C97E]' role='measure' type='quantitative' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Driverid' datatype='string' name='[driverid]' role='dimension' type='nominal' />
      <column caption='Event' datatype='string' name='[event]' role='dimension' type='nominal' />
      <column caption='Event Ind' datatype='integer' name='[event_ind]' role='measure' type='quantitative' />
      <column caption='Idling Ind' datatype='integer' name='[idling_ind]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Truckid' datatype='string' name='[truckid]' role='dimension' type='nominal' />
      <column caption='Velocity' datatype='integer' name='[velocity]' role='measure' type='quantitative' />
      <group caption='City Set' name='[City Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='COUNT([event_ind])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[city]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='state, city'>
          <field>[state]</field>
          <field>[city]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Dropped_20231202T194519.txt' id='Dropped_20231202T194519.txt_23B81CA1D2874C9EB025CFBABB813430'>
            <properties context=''>
              <relation connection='Dropped_20231202T194519' name='Dropped_20231202T194519.txt' table='[Dropped_20231202T194519#txt]' type='table' />
            </properties>
          </object>
          <object caption='geolocation.csv' id='geolocation.csv_DF8EFBB536154BF892A6B110C984C97E'>
            <properties context=''>
              <relation connection='textscan.1kuwsaa0y3dhoe1g3lf4j0ua6kny' name='geolocation.csv' table='[geolocation#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='truckid' ordinal='0' />
                  <column datatype='string' name='driverid' ordinal='1' />
                  <column datatype='string' name='event' ordinal='2' />
                  <column datatype='real' name='latitude' ordinal='3' />
                  <column datatype='real' name='longitude' ordinal='4' />
                  <column datatype='string' name='city' ordinal='5' />
                  <column datatype='string' name='state' ordinal='6' />
                  <column datatype='integer' name='velocity' ordinal='7' />
                  <column datatype='integer' name='event_ind' ordinal='8' />
                  <column datatype='integer' name='idling_ind' ordinal='9' />
                  <column datatype='string' name='Risk_factor' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[]' />
              <expression op='[]' />
            </expression>
            <first-end-point object-id='geolocation.csv_DF8EFBB536154BF892A6B110C984C97E' />
            <second-end-point object-id='Dropped_20231202T194519.txt_23B81CA1D2874C9EB025CFBABB813430' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Top5Cities_IncidentCount'>
      <table>
        <view>
          <datasources>
            <datasource caption='geolocation' name='federated.1k9umgo00s0xqq198jzx909byebh' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1k9umgo00s0xqq198jzx909byebh'>
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[event_ind]' derivation='Count' name='[cnt:event_ind:qk]' pivot='key' type='quantitative' />
            <column caption='Event Ind' datatype='integer' name='[event_ind]' role='measure' type='quantitative' />
            <column-instance column='[velocity]' derivation='Max' name='[max:velocity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[velocity]' derivation='Median' name='[med:velocity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Velocity' datatype='integer' name='[velocity]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1k9umgo00s0xqq198jzx909byebh].[City Set]' />
          <slices>
            <column>[federated.1k9umgo00s0xqq198jzx909byebh].[City Set]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1k9umgo00s0xqq198jzx909byebh].[Longitude (generated)]' field-type='quantitative' max='-11657643.93952102' min='-15157040.643122463' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1k9umgo00s0xqq198jzx909byebh].[Latitude (generated)]' field-type='quantitative' max='5182691.8160222406' min='3411193.9030142142' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1k9umgo00s0xqq198jzx909byebh].[none:state:nk]' />
              <lod column='[federated.1k9umgo00s0xqq198jzx909byebh].[none:city:nk]' />
              <lod column='[federated.1k9umgo00s0xqq198jzx909byebh].[cnt:event_ind:qk]' />
              <lod column='[federated.1k9umgo00s0xqq198jzx909byebh].[max:velocity:qk]' />
              <lod column='[federated.1k9umgo00s0xqq198jzx909byebh].[med:velocity:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1k9umgo00s0xqq198jzx909byebh].[Latitude (generated)]</rows>
        <cols>[federated.1k9umgo00s0xqq198jzx909byebh].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{DDFB601F-6E23-447C-8553-4E4FFA3469F5}' />
    </worksheet>
    <worksheet name='VelocitySpread_Driver'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='geolocation' name='federated.1k9umgo00s0xqq198jzx909byebh' />
          </datasources>
          <datasource-dependencies datasource='federated.1k9umgo00s0xqq198jzx909byebh'>
            <column caption='Driverid' datatype='string' name='[driverid]' role='dimension' type='nominal' />
            <column-instance column='[driverid]' derivation='None' name='[none:driverid:nk]' pivot='key' type='nominal' />
            <column-instance column='[velocity]' derivation='None' name='[none:velocity:qk]' pivot='key' type='quantitative' />
            <column-instance aggregation-param='90' column='[velocity]' derivation='Percentile' name='[prc90:velocity:qk]' pivot='key' type='quantitative' />
            <column caption='Velocity' datatype='integer' name='[velocity]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1k9umgo00s0xqq198jzx909byebh].[none:velocity:qk]' included-values='in-range'>
            <min>0</min>
            <max>100</max>
          </filter>
          <slices>
            <column>[federated.1k9umgo00s0xqq198jzx909byebh].[none:velocity:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1k9umgo00s0xqq198jzx909byebh].[none:velocity:qk]' palette='red_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1k9umgo00s0xqq198jzx909byebh].[prc90:velocity:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#000000' />
            <format attr='font-family' value='Tableau Semibold' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#ffffff' />
            <format attr='fill-below' id='refline2' value='#c5f3a6' />
            <format attr='vertical-align' id='refline2' value='bottom' />
            <format attr='text-format' id='refline2' value='' />
            <format attr='background-color' id='refline2' value='#ffffff' />
            <format attr='background-color' id='refline1' value='#fffffff4' />
            <format attr='stroke-size' id='refline2' value='5' />
            <format attr='stroke-color' id='refline2' value='#ff0000d6' />
            <format attr='stroke-size' id='refline1' value='5' />
            <format attr='stroke-color' id='refline1' value='#59a14fe7' />
            <format attr='vertical-align' id='refline1' value='bottom' />
          </style-rule>
          <style-rule element='refboxplot'>
            <format attr='fill-color' id='refline0' value='#f0f0f0d9' />
            <format attr='palette' id='refline0' value='bp_orange' />
            <format attr='opacity' id='refline0' value='226' />
            <format attr='boxplot-style' id='refline0' value='classic-two-tone' />
            <format attr='whisker-end' id='refline0' value='large' />
            <format attr='whisker-stroke-color' id='refline0' value='#555555' />
            <format attr='whisker-stroke-size' id='refline0' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1k9umgo00s0xqq198jzx909byebh].[none:velocity:qk]' />
              <lod column='[federated.1k9umgo00s0xqq198jzx909byebh].[prc90:velocity:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1k9umgo00s0xqq198jzx909byebh].[none:velocity:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1k9umgo00s0xqq198jzx909byebh].[none:velocity:qk]' z-order='1' />
            <reference-line axis-column='[federated.1k9umgo00s0xqq198jzx909byebh].[none:velocity:qk]' enable-instant-analytics='true' formula='median' id='refline1' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1k9umgo00s0xqq198jzx909byebh].[none:velocity:qk]' z-order='2' />
            <reference-line axis-column='[federated.1k9umgo00s0xqq198jzx909byebh].[none:velocity:qk]' enable-instant-analytics='true' formula='constant' id='refline2' label='Acceptable maximum speed limit-55' label-type='custom' scope='per-table' tooltip='Acceptable average speed limit' tooltip-type='custom' value='55' value-column='[federated.1k9umgo00s0xqq198jzx909byebh].[none:velocity:qk]' z-order='3' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1k9umgo00s0xqq198jzx909byebh].[none:velocity:qk]</rows>
        <cols>[federated.1k9umgo00s0xqq198jzx909byebh].[none:driverid:nk]</cols>
      </table>
      <simple-id uuid='{3780AFD1-011B-42AB-B0BA-B795E545DB92}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='VelocitySpread_Driver'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1k9umgo00s0xqq198jzx909byebh].[none:velocity:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.1k9umgo00s0xqq198jzx909byebh].[none:velocity:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1k9umgo00s0xqq198jzx909byebh].[City Set]</field>
            <field>[federated.1k9umgo00s0xqq198jzx909byebh].[none:driverid:nk]</field>
            <field>[federated.1k9umgo00s0xqq198jzx909byebh].[none:velocity:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2EA40387-5BAD-46A4-B516-8A4CF0FED0E2}' />
    </window>
    <window class='worksheet' name='Top5Cities_IncidentCount'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1k9umgo00s0xqq198jzx909byebh].[City Set]</field>
            <field>[federated.1k9umgo00s0xqq198jzx909byebh].[none:city:nk]</field>
            <field>[federated.1k9umgo00s0xqq198jzx909byebh].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{26901520-8AE6-4787-9669-FA2CA24E0983}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Top5Cities_IncidentCount' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='VelocitySpread_Driver' width='192'>
      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
      /laVdNnzOQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
